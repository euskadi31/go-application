// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package application

import (
	config "github.com/euskadi31/go-application/config"
	hcl "github.com/hashicorp/hcl/v2"

	mock "github.com/stretchr/testify/mock"

	service "github.com/euskadi31/go-service"
)

// MockConfigurableProvider is an autogenerated mock type for the ConfigurableProvider type
type MockConfigurableProvider struct {
	mock.Mock
}

// Config provides a mock function with given fields: c, ctx, schema
func (_m *MockConfigurableProvider) Config(c service.Container, ctx *hcl.EvalContext, schema *config.ProviderSchema) hcl.Diagnostics {
	ret := _m.Called(c, ctx, schema)

	var r0 hcl.Diagnostics
	if rf, ok := ret.Get(0).(func(service.Container, *hcl.EvalContext, *config.ProviderSchema) hcl.Diagnostics); ok {
		r0 = rf(c, ctx, schema)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(hcl.Diagnostics)
		}
	}

	return r0
}
